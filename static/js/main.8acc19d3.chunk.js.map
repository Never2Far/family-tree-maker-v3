{"version":3,"sources":["reducers/manageRelatives.js","reducers/manageUsers.js","reducers/rootReducer.js","components/NavBar.js","containers/dashboard/Dashboard.js","containers/profile-page/UserDetails.js","containers/profile-page/UserEdit.js","actions/updateUser.js","containers/profile-page/ProfilePage.js","components/RelativeInput.js","actions/saveRelative.js","actions/deleteRelative.js","components/DeleteConfirmModal.js","components/Relative.js","components/RelativesList.js","containers/family-page/FamilyPage.js","containers/tree-page/GridContainer.js","containers/tree-page/TreePage.js","components/RelativeDetails.js","components/RelativeEdit.js","actions/updateRelative.js","containers/RelativeShowContainer.js","App.js","actions/fetchUser.js","actions/fetchRelatives.js","containers/AuthContainer.js","index.js"],"names":["manageRelatives","state","relatives","loading","action","type","console","log","Object","assign","relative","payload","includes","filter","relativeId","manageUsers","userInfo","rootReducer","combineReducers","users","NavBar","style","borderBottom","paddingBottom","marginBottom","marginRight","to","float","Dashboard","Container","Jumbotron","UserDetails","props","user","useAuth0","history","useHistory","Table","striped","bordered","hover","size","firstName","middleName","lastName","nickname","altName","birthdate","dobArr","split","dob","push","join","displayDate","birthplace","email","phone","address","Button","className","variant","block","onClick","setEditing","UserEdit","useState","setFirstName","setLastName","setMiddleName","setNickname","setAltName","setBirthdate","setPhone","setAddress","city","setCity","setState","zip","setZip","setBirthplace","dispatch","useDispatch","handleOnSubmit","e","preventDefault","userId","key","userDetails","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","result","success","error","updateUser","Form","onSubmit","id","Group","as","Row","controlId","Label","column","sm","Col","xs","Control","name","value","onChange","event","target","placeholder","ProfilePage","useSelector","editing","RelativeInput","sub","relationship","setRelationship","fullName","relativeObj","cuid","saveRelative","inline","hidden","deleteRelative","DeleteConfirmModal","Modal","show","onHide","centered","backdrop","keyboard","Header","closeButton","Title","Body","Footer","handleclickdelete","handleclickcancel","Relative","modalShow","setModalShow","ListGroup","Item","RelativesList","map","FamilyPage","GridContainer","TreePage","treeRef","useRef","handlePrint","useReactToPrint","content","current","ref","margin","display","RelativeDetails","goBack","notes","RelativeEdit","setEmail","setNotes","updateRelative","RelativeShowContainer","useParams","find","App","needUserInfo","logout","exact","path","render","fetchUser","length","forEach","AuthContainer","isLoading","isAuthenticated","loginWithRedirect","message","given_name","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","domain","clientId","redirectUri","location","origin","audience","scope","document","getElementById"],"mappings":"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","file":"static/js/main.8acc19d3.chunk.js","sourcesContent":["function manageRelatives(state = {relatives: [],\n                                loading: false}, action)  {\n\nswitch (action.type) {\n    case 'ADDING_RELATIVE':\n        console.log('Adding Relative to DB....')\n\n        return Object.assign({}, {relatives: [...state.relatives]}, {loading: true})\n\n    case 'DELETING_RELATIVE':\n        console.log('Removing Relative from DB....')\n\n        return Object.assign({}, {relatives: [...state.relatives]}, {loading: true})\n\n    case 'FETCHING_RELATIVES':\n        console.log('Fetching saved relatives from DB....')\n    \n        return Object.assign({}, {relatives: [...state.relatives]}, {loading: true})\n\n    case 'UPDATING_RELATIVE':\n        console.log('Updating relative...')\n    \n        return Object.assign({}, {relatives: [...state.relatives]}, {loading: true})\n\n    case 'ADD_RELATIVE':\n        \n        const relative = action.payload\n        if (!state.relatives.includes(relative)) {\n        \n        return Object.assign({}, {relatives: [...state.relatives, relative]}, {loading: false})\n        }\n            \n        else {\n            return state\n        }\n        \n    case 'REMOVE_RELATIVE':\n\n        return Object.assign({}, {relatives: state.relatives.filter(relative => relative.relativeId !== action.payload.relativeId)}, {loading: false})\n\n    \n    default:\n        return state\n}\n\n}\n\nexport default manageRelatives\n","function manageUsers(state = {\n    userInfo: {},\n    loading: false\n}, action) {\nswitch (action.type) {\n    case 'SETTING_USER_INFO':\n        console.log('Setting user...')\n    \n        return Object.assign({}, {...state}, {loading: true})\n        case 'FETCHING_USER':\n\nconsole.log('Fetching User...')\n    \n        return Object.assign({}, {...state}, {loading: true})\n        \n    case 'SET_USER_INFO':\nconst payload = action.payload\n\n        return Object.assign({}, {...state}, {userInfo: payload}, {loading: false})\n\n        case 'UPDATING_USER':\n\n         console.log('Updating user...')\n    \n        return Object.assign({}, {...state}, {loading: true})\n\n        \ndefault:\n    return state\n}\n}\n\nexport default manageUsers","import { combineReducers } from 'redux';\nimport manageRelatives from './manageRelatives'\nimport  manageUsers  from './manageUsers';\n\n\nconst rootReducer = combineReducers({\n    relatives: manageRelatives,\n    users: manageUsers\n});\n\nexport default rootReducer","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div style={{ borderBottom: '2px solid black', paddingBottom: '10px', marginBottom: '12px' }}>\r\n      <NavLink \r\n        style={{ marginRight: '10px' }} \r\n        to=\"/home\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink \r\n        style={{ marginRight: '10px' }} \r\n        to=\"/profile\"\r\n      >\r\n        Profile\r\n      </NavLink>\r\n\r\n      \r\n      <NavLink\r\n      style={{ marginRight: '10px' }} \r\n      to=\"/relatives\"\r\n    >\r\n      My Family\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      style={{ marginRight: '10px' }} \r\n      to=\"/tree\"\r\n    >\r\n      Tree\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      style={{ marginRight: '10px', float: 'right' }} \r\n      to=\"/logout\"\r\n    >\r\n      Log Out\r\n    </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport {Link} from 'react-router-dom'\n\nconst Dashboard = () => {\n\n    return (\n        <Container>\n            <Jumbotron>\n                <h2>Welcome to the Family Tree Maker!</h2>\n                <ol>\n                    <li>Edit your information by clicking on <Link to={`/profile`}>Profile</Link>.</li>\n                    <li>Add your relatives using the <Link to={`/relatives`}>My Family</Link> page.</li>\n                    <li>Edit your relative's details by clicking on their name.</li>\n                    <li>View your tree by clicking <Link to={`/tree`}>Tree</Link></li>\n                </ol>\n            </Jumbotron>\n        </Container>\n    )\n\n}\n\nexport default Dashboard","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport { useAuth0 } from '@auth0/auth0-react';\nimport './UserDetails.css'\n\nconst UserDetails = (props) => {\n    const { user } = useAuth0();\nconst userInfo = props.userInfo\n    const history = useHistory();\n\n    function handleOnClick() {\n        history.push(`/profile/edit`);\n        props.setEditing(true)\n    }\n\n    function displayDate(birthdate) {\n        \n        const dobArr = birthdate.split(\"-\")\n        const dob = []\n        dob.push(dobArr[1])\n        dob.push(dobArr[2])\n        dob.push(dobArr[0])\n\n        \n        return dob.join(\"-\")\n\n    }\n\n    return (\n        \n    <div>\n        \n                <Table  striped bordered hover size='sm'>\n                    <tbody >\n                        <tr>\n                            <td>First Name:</td>\n                            <td>{userInfo.firstName}</td>\n                        </tr>\n                        <tr>\n                            <td>Middle Name:</td>\n                            <td>{userInfo.middleName}</td>\n                        </tr>\n                        <tr>\n                            <td>Last Name:</td>\n                            <td>{userInfo.lastName}</td>\n                        </tr>\n                        <tr>\n                            <td>Nickname:</td>\n                            <td>{userInfo.nickname}</td>\n                        </tr>\n                        <tr>\n                            <td>Alternative Names/Spelling:</td>\n                            <td>{userInfo.altName}</td>\n                        </tr>\n                        <tr>\n                            <td>DOB:</td>\n                            <td>{userInfo.birthdate ? displayDate(userInfo.birthdate) : false}</td>\n                        </tr>\n                        \n                        <tr>\n                            <td>Birthplace:</td>\n                            <td>{userInfo.birthplace}</td>\n                        </tr>\n                        <tr>\n                            <td>Email:</td>\n                            <td>{user.email}</td>\n                        </tr>\n                        <tr>\n                            <td>Phone:</td>\n                            <td>{userInfo.phone}</td>\n                        </tr>\n                \n                        <tr>\n                            <td>Address:</td>\n                            <td>{userInfo.address}</td>\n                        </tr>\n                        \n                    </tbody>\n                </Table>\n                <Button \nclassName=\"edit-button\" \nvariant='primary' \nsize='lg' \nblock\nonClick={handleOnClick}>Edit Profile</Button>\n</div>\n    )\n}\n\nexport default UserDetails","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\nimport { updateUser } from '../../actions/updateUser'\n\n\nconst UserEdit = (props) => {\n    // const loading = useSelector(state => state.relatives.loading)\n\nconst userInfo = props.userInfo\nconst history = useHistory()\n\n\n    const [firstName, setFirstName] = useState(userInfo.firstName)\n    const [lastName, setLastName] = useState(userInfo.lastName)\n    const [middleName, setMiddleName] = useState(userInfo.middleName)\n    const [nickname, setNickname] = useState(userInfo.nickname)\n    const [altName, setAltName] = useState(userInfo.altName)\n    const [birthdate, setBirthdate] = useState(userInfo.birthdate)\n    const [phone, setPhone] = useState(userInfo.phone)\n    const [address, setAddress] = useState(userInfo.address)\n    const [city, setCity] = useState(userInfo.city)\n    const [state, setState] = useState(userInfo.state)\n    const [zip, setZip] = useState(userInfo.zip)\n   \n    \n\n    const [birthplace, setBirthplace] = useState(userInfo.birthplace)\n\n    \nconst dispatch = useDispatch()\n\nfunction handleOnSubmit(e) {\n    e.preventDefault()\n    const payload = {\n         firstName,\n    middleName,\n    lastName,\n    nickname,\n    altName,\n     userId: userInfo.userId,\n    birthdate,\n    birthplace,\n    phone,\n    address\n    }\n\n    for (const key in payload) {\n        \n            const element = payload[key];\n            if (!element) {payload[key] = ''}\n    }\n    dispatch(updateUser(payload))\n    props.setEditing(false)\n    history.push(`/profile`);\n    \n    \n}\n\n\nfunction handleOnClick() {\n    \n    history.push(`/profile`);\n    props.setEditing(false)\n}\n    return (\n        <div>\n            \n        <Form onSubmit={e => handleOnSubmit(e)} id='edit-user-form' >\n                \n                <Form.Group as={Row}  controlId='formFirstName'>\n                    \n                    <Form.Label column sm={2}>\n                        First Name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"firstName\" \n                        value={firstName}\n                        onChange={(event) => setFirstName(event.target.value)} />\n                    </Col>\n                   \n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formMiddleName'>\n                    <Form.Label column sm={2}>\n                        Middle Name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"middleName\" \n                        value={middleName}\n                        onChange={(event) => setMiddleName(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formLastName'>\n                    <Form.Label column sm={2}>\n                        Last Name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"lastName\" \n                        value={lastName}\n                        onChange={(event) => setLastName(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formNickname'>\n                    <Form.Label column sm={2}>\n                        Nick name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"nickname\" \n                        value={nickname}\n                        onChange={(event) => setNickname(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formAltName'>\n                    <Form.Label column sm={2}>\n                        Alternative Names/Spelling:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"altName\" \n                        value={altName}\n                        onChange={(event) => setAltName(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n               \n\n                <Form.Group as={Row} controlId='formPhone'>\n                    <Form.Label column sm={2}>\n                        Phone:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='tel' \n                        name=\"phone\" \n                        value={phone}\n                        onChange={(event) => setPhone(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formBirthdate'>\n                    <Form.Label column sm={2}>\n                        Birthdate:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='date' \n                        name=\"birthdate\" \n                        value={birthdate}\n                        onChange={(event) => setBirthdate(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formBirthplace'>\n                    <Form.Label column sm={2}>\n                        Birthplace:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"birthplace\" \n                        value={birthplace}\n                        onChange={(event) => setBirthplace(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formAddress\">\n    <Form.Label column sm={2}>Address:</Form.Label>\n    <Col xs='auto'>\n    <Form.Control \n    placeholder=\"Street\"\n    type='text' \n    name=\"address\" \n    value={address}\n    onChange={(event) => setAddress(event.target.value)}  />\n    </Col>\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formCity\">\n    \n      <Form.Control \n      placeholder=\"City\"\n      type='text' \n      name=\"city\" \n      value={city}\n      onChange={(event) => setCity(event.target.value)}/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formState\">\n     \n      <Form.Control placeholder=\"State\"\n      type='text'\n      name=\"state\" \n      value={state}\n      onChange={(event) => setState(event.target.value)}/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formZip\">\n      \n      <Form.Control \n      placeholder=\"Zip\"\n      type='text' \n      name=\"zip\" \n      value={zip}\n      onChange={(event) => setZip(event.target.value)}/>\n    </Form.Group>\n  </Form.Row>\n\n                <Button \n                type='submit'\nclassName=\"update-button\" \nvariant='primary' \nsize='lg' \nblock>\n{/* >{loading && <span><Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />Saving...</span>} */}\n    Save Changes</Button>\n<Button block variant='warning' size='lg' onClick={handleOnClick}>Cancel</Button>\n            </Form>\n\n\n</div>\n    )\n\n\n}\n\nexport default UserEdit","import App from \"../App\";\n\nexport function updateUser(userInfo) {\n  const userDetails = Object.assign({}, { user: userInfo });\n  return (dispatch) => {\n    dispatch({ type: \"UPDATING_USER\" });\n    fetch(\"https://family-tree-maker-v3.herokuapp.com/users\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(userDetails),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.success === true) {\n          const payload = Object.assign({}, result.userInfo, {\n            userId: userDetails.userId,\n          });\n          dispatch({ type: \"SET_USER_INFO\", payload });\n          return <App />;\n        } else {\n          console.log(result.error);\n        }\n      });\n  };\n}\n","import React, {useState} from 'react';\nimport {useSelector} from 'react-redux'\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport UserDetails from './UserDetails'\nimport UserEdit from './UserEdit'\n\n\nconst ProfilePage = (props) => {\n    const userInfo = useSelector(state => state.users.userInfo)\n\n        // const dispatch = useDispatch()\n    const [editing, setEditing] = useState(props.editing)\n\n    return (\n        <Container>\n            \n            <h1>About Me</h1>\n            <Jumbotron>\n            {(editing) ? <UserEdit userInfo={userInfo} setEditing={setEditing}/> : <UserDetails setEditing={setEditing} userInfo={userInfo}/>}\n            </Jumbotron>\n            \n            \n        </Container>\n    )\n\n}\n\nexport default ProfilePage","import React, { useState } from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport {saveRelative} from '../actions/saveRelative'\r\n\r\n\r\n\r\n  const RelativeInput = () => {\r\n    const dispatch = useDispatch()\r\n    const {user} = useAuth0();\r\n    const userId = user.sub\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [relationship, setRelationship] = useState('')\r\n  \r\n\r\n const handleOnSubmit = event => {\r\n    event.preventDefault();\r\n\r\nconst payload = {\r\n  firstName: firstName,\r\n  lastName: lastName,\r\n  fullName: `${firstName} ${lastName}`,\r\n  relationship: relationship,\r\n  userId: userId\r\n}\r\n\r\n    dispatch(saveRelative(payload))\r\n\r\n    setFirstName('')\r\n    setLastName('')\r\n    setRelationship('')\r\n  }\r\n\r\n\r\n    return (\r\n      \r\n      \r\n        <Container>\r\n          <Jumbotron>\r\n          <h3>Add New Relative</h3>\r\n        <Form inline onSubmit={(event) => handleOnSubmit(event)}>\r\n        \r\n        <Form.Group controlId=\"formGroupFirstName\">\r\n          <Form.Label>First Name: </Form.Label>\r\n          <Form.Control\r\n          size=\"sm\"\r\n           type='text'\r\n           name='firstName'\r\n           onChange={(event) => setFirstName(event.target.value)}\r\n           value={firstName}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGroupLastName\">\r\n        <Form.Label>Last Name: </Form.Label>\r\n        <Form.Control \r\n        size=\"sm\"\r\n          type='text'\r\n          name='lastName'\r\n          onChange={(event) => setLastName(event.target.value)}\r\n          value={lastName}\r\n        />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGroupRelationship\">\r\n        <Form.Label>Relationship: </Form.Label>\r\n        <Form.Control \r\n        as=\"select\"\r\n        size=\"sm\"\r\n          \r\n          name='relationship'\r\n          onChange={(event) => setRelationship(event.target.value)}\r\n          value={relationship}\r\n        >\r\n        <option hidden value>Select one...</option>\r\n        <option value='spouse'>Spouse</option>\r\n        <option value='father'>Father</option>\r\n        <option value='mother'>Mother</option>\r\n        <option value='father-in-law'>Father-in-law</option>\r\n        <option value='mother-in-law'>Mother-in-law</option>\r\n        <option value='sibling-1'>Sibling-1</option>\r\n        <option value='sibling-2'>Sibling-2</option>\r\n        <option value='sibling-in-law-1'>Sibling-in-law-1</option>\r\n        <option value='sibling-in-law-2'>Sibling-in-law-2</option>\r\n        <option value='child-1'>Child-1</option>\r\n        <option value='child-2'>Child-2</option>\r\n        <option value='child-3'>Child-3</option>\r\n        <option value='child-4'>Child-4</option>\r\n\r\n        </Form.Control>\r\n        </Form.Group>\r\n        \r\n\r\n        <Button variant=\"primary\" type='submit'>\r\n          Submit\r\n        </Button>\r\n        \r\n     \r\n      </Form>\r\n      </Jumbotron>\r\n      </Container>\r\n    );\r\n  \r\n};\r\n\r\nexport default RelativeInput;","import cuid from \"cuid\";\r\n\r\nexport function saveRelative(relativeObj) {\r\n  const relative = {\r\n    firstName: relativeObj.firstName,\r\n    lastName: relativeObj.lastName,\r\n    fullName: relativeObj.fullName,\r\n    relationship: relativeObj.relationship,\r\n    userId: relativeObj.userId,\r\n    relativeId: cuid(),\r\n  };\r\n  return (dispatch) => {\r\n    dispatch({ type: \"ADDING_RELATIVE\" });\r\n    fetch(\"https://family-tree-maker-v3.herokuapp.com/relatives\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(relative),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.success === true) {\r\n          dispatch({ type: \"ADD_RELATIVE\", payload: relative });\r\n        } else {\r\n          console.log(result.error);\r\n        }\r\n      });\r\n  };\r\n}\r\n","export function deleteRelative(relativeObj) {\n  const relative = {\n    userId: relativeObj.userId,\n    relativeId: relativeObj.relativeId,\n  };\n  return (dispatch) => {\n    dispatch({ type: \"DELETING_RELATIVE\" });\n    fetch(\"https://family-tree-maker-v3.herokuapp.com/relatives\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(relative),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.success === true) {\n          dispatch({ type: \"REMOVE_RELATIVE\", payload: relative });\n        } else {\n          console.log(result.error);\n        }\n      });\n  };\n}\n","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nconst DeleteConfirmModal = (props) => {\n\nreturn(\n    <Modal\n    show={props.show}\n            onHide={props.onHide}\n      \n    size='lg'\n    centered\n    backdrop=\"static\"\n    keyboard={false}\n    >\n<Modal.Header closeButton>\n        <Modal.Title id=\"delete-confirm\">\n          Delete Relative?\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Are you sure you want to delete this relative?</h4>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='danger' onClick={props.handleclickdelete}>Delete Relative</Button>\n        <Button variant='warning' onClick={props.handleclickcancel}>Cancel</Button>\n      </Modal.Footer>\n    </Modal>\n)\n\n}\n\nexport default DeleteConfirmModal","import React, {useState} from 'react';\nimport {useDispatch} from 'react-redux'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Button from 'react-bootstrap/Button'\nimport {deleteRelative} from '../actions/deleteRelative'\nimport {Link} from 'react-router-dom'\nimport DeleteConfirmModal from './DeleteConfirmModal'\n\n\n\nconst Relative = (props) => {\n      const dispatch = useDispatch()\n      const [modalShow, setModalShow] = useState(false)\n\n\nconst handleClickDelete = () => {\n\n     const payload = {relativeId: props.relative.relativeId,\n                        userId: props.relative.userId}\n      dispatch(deleteRelative(payload))\n      setModalShow(false)\n}\n\nconst handleClickCancel = () => {\n      setModalShow(false)\n}\n\n\n\n\n    return (\n        \n          <ListGroup.Item key={props.relative.relativeId}>\n                <Link\n                  to={`/relatives/${props.relative.relativeId}`}\n                  >\n                        {`${props.relative.fullName}`}\n                  </Link> - {`${props.relative.relationship} `}\n          <Button \n          variant='danger' \n          onClick={() => setModalShow(true)}\n          size='sm'> X </Button>\n          <DeleteConfirmModal \n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            handleclickdelete={handleClickDelete}\n            handleclickcancel={handleClickCancel}\n            />\n          </ListGroup.Item>\n          \n    )\n\n\n};\n\nexport default Relative;","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport Relative from './Relative';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n   const RelativesList = (props) => {\n \n\n      const relatives = useSelector(state => state.relatives.relatives)\n  \n    return (\n      \n      <ListGroup variant='flush'>\n           {relatives.map( relative => \n          \n          <Relative relative={relative} key={relative.relativeId} userId={relative.userId} relativeId={relative.relativeId} deleteRelative={props.deleteRelative}/>\n           )}\n      </ListGroup>\n      \n    )\n \n\n          }\n          \nexport default RelativesList;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport RelativeInput from '../../components/RelativeInput'\r\nimport RelativesList from '../../components/RelativesList'\r\n\r\n\r\nconst FamilyPage = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <h1>My Family</h1>\r\n            <RelativeInput />\r\n            <RelativesList />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FamilyPage","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport './GridContainer.css'\n// import { useAuth0 } from '@auth0/auth0-react';\n\n\nfunction GridContainer(props) {\n const userInfo = useSelector(state => state.users.userInfo)\n const fullName = `${userInfo.firstName} ${userInfo.lastName}`\n  const relatives = props.relatives\n  // const {user} = useAuth0();\n\n\nreturn (\n\n<Container>\n<div className=\"grid-container\">\n<div className=\"user\"><Link to='/profile'>{fullName}</Link></div>\n  {relatives.map(relative => \n  <div className={relative.relationship} key={relative.relativeId}>\n    <Link\n    to={`/relatives/${relative.relativeId}`}>{`${relative.fullName}`}</Link>\n    \n    \n    </div>\n    )}\n    <div className=\"spouse\"></div>\n  <div className=\"father\"></div>\n  <div className=\"mother\"></div>\n  <div className=\"father-in-law\"></div>\n  <div className=\"mother-in-law\"></div>\n  <div className=\"child-2\"></div>\n  <div className=\"child-1\"></div>\n  <div className=\"child-3\"></div>\n  <div className=\"child-4\"></div>\n  <div className=\"sibling-1\"></div>\n  <div className=\"sibling-in-law-1\"></div>\n  <div className=\"sibling-in-law-2\"></div>\n  <div className=\"sibling-2\"></div>\n  <div className=\"t\">\n    <div className=\"tb\"></div>\n    <div className=\"tb-lb\"></div>\n  </div>\n  <div className=\"t2\">\n    <div className=\"tb2\"></div>\n    <div className=\"tb2-lb2\"></div>\n  </div>\n  <div className=\"t3\">\n    <div className=\"tb3\"></div>\n    <div className=\"tb3-lb3\"></div>\n  </div>\n  <div className=\"c\">\n    <div className=\"bb15\"></div>\n    <div className=\"lb-bb\"></div>\n    <div className=\"lb13\"></div>\n  </div>\n  <div className=\"c2\">\n    <div className=\"bb5\"></div>\n    <div className=\"lb5-bb16\"></div>\n    <div className=\"lb12\"></div>\n  </div>\n  <div className=\"s\">\n    <div className=\"bb\"></div>\n  </div>\n  <div className=\"s2\">\n    <div className=\"bb2\"></div>\n  </div>\n  <div className=\"c3\">\n    <div className=\"rb\"></div>\n    <div className=\"bb3\"></div>\n  </div>\n  <div className=\"c4\">\n    <div className=\"lb4\"></div>\n    <div className=\"bb4\"></div>\n  </div>\n  <div className=\"t4\">\n    <div className=\"lb4-bb4\"></div>\n    <div className=\"bb6\"></div>\n  </div>\n  <div className=\"t5\">\n    <div className=\"bb7\"></div>\n    <div className=\"lb7\"></div>\n  </div>\n  <div className=\"c5\">\n    <div className=\"bb8\"></div>\n    <div className=\"lb8\"></div>\n  </div>\n  <div className=\"t6\">\n    <div className=\"bb9\"></div>\n    <div className=\"rb9\"></div>\n  </div>\n  <div className=\"c6\">\n    <div className=\"bb10\"></div>\n    <div className=\"rb10\"></div>\n  </div>\n  <div className=\"c7\">\n    <div className=\"bb13\"></div>\n    <div className=\"lb10\"></div>\n  </div>\n  <div className=\"s3\">\n    <div className=\"bb11\"></div>\n  </div>\n  <div className=\"s4\">\n    <div className=\"bb12\"></div>\n  </div>\n  <div className=\"c8\">\n    <div className=\"bb14\"></div>\n    <div className=\"rb11\"></div>\n  </div>\n</div>\n</Container>\n)\n}\n\n\nexport default GridContainer","import React, {useRef} from 'react';\nimport {useSelector} from 'react-redux'\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport GridContainer from './GridContainer'\nimport {useReactToPrint} from 'react-to-print'\n\nconst TreePage = () => {\n\n    const relatives = useSelector(state => state.relatives.relatives)\n    \n        const treeRef = useRef()\n        const handlePrint = useReactToPrint({\n            content: () => treeRef.current\n        })\n\n    return (\n        <div>\n        \n        <Container ref={treeRef}>\n            <h1>Family Tree</h1>\n            <GridContainer relatives={relatives}/>\n        </Container>\n        \n        <br></br>\n        <br></br>\n        \n        <Button \n        variant='primary' \n        size='lg'\n        style={{margin: '0 auto',\n                display: 'block'}}\n                onClick={handlePrint}\n        >\n        Click here to print your family tree!</Button>\n        \n        </div>\n    )\n}\n\nexport default TreePage","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport './RelativeDetails.css'\n\nconst RelativeDetails = (props) => {\n    const relative = props.relative\n\n    const history = useHistory();\n\n    function handleOnClick() {\n        history.push(`/relatives/${relative.relativeId}/edit`);\n        props.setEditing(true)\n    }\n\n    return (\n        \n    <div>\n        <Button variant='secondary' onClick={() => history.goBack()} >{' <- back'}</Button>\n        <h2>{relative.fullName} ({relative.relationship})</h2>\n                <Table  striped bordered hover size='sm'>\n                    <tbody >\n                        <tr>\n                            <td>First Name:</td>\n                            <td>{relative.firstName}</td>\n                        </tr>\n                        <tr>\n                            <td>Middle Name:</td>\n                            <td>{relative.middleName}</td>\n                        </tr>\n                        <tr>\n                            <td>Last Name:</td>\n                            <td>{relative.lastName}</td>\n                        </tr>\n                        <tr>\n                            <td>Nickname:</td>\n                            <td>{relative.nickname}</td>\n                        </tr>\n                        <tr>\n                            <td>Alternative Names/Spelling:</td>\n                            <td>{relative.altName}</td>\n                        </tr>\n                        <tr>\n                            <td>DOB:</td>\n                            <td>{relative.birthdate}</td>\n                        </tr>\n                       \n                        <tr>\n                            <td>Birthplace:</td>\n                            <td>{relative.birthplace}</td>\n                        </tr>\n                        <tr>\n                            <td>Email:</td>\n                            <td>{relative.email}</td>\n                        </tr>\n                        <tr>\n                            <td>Phone:</td>\n                            <td>{relative.phone}</td>\n                        </tr>\n                        <tr>\n                            <td>Relationship:</td>\n                            <td>{relative.relationship}</td>\n                        </tr>\n                        <tr>\n                            <td>Address:</td>\n                            <td>{relative.address}</td>\n                        </tr>\n                        \n                        <tr>\n                            <td>Notes:</td>\n                            <td>{relative.notes}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n                <Button \nclassName=\"edit-button\" \nvariant='primary' \nsize='lg' \nblock\nonClick={handleOnClick}>Edit Relative</Button>\n</div>\n    )\n}\n\nexport default RelativeDetails","import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport {updateRelative} from '../actions/updateRelative'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\n\n\nconst RelativeEdit = (props) => {\n    // const loading = useSelector(state => state.relatives.loading)\nconst relative = props.relative\nconst history = useHistory()\n\n\n    const [firstName, setFirstName] = useState(relative.firstName)\n    const [lastName, setLastName] = useState(relative.lastName)\n    const [middleName, setMiddleName] = useState(relative.middleName)\n    const [nickname, setNickname] = useState(relative.nickname)\n    const [altName, setAltName] = useState(relative.altName)\n    const [birthdate, setBirthdate] = useState(relative.birthdate)\n    const [email, setEmail] = useState(relative.email)\n    const [phone, setPhone] = useState(relative.phone)\n    const [address, setAddress] = useState(relative.address)\n    const [city, setCity] = useState(relative.city)\n    const [state, setState] = useState(relative.state)\n    const [zip, setZip] = useState(relative.zip)\n    const [notes, setNotes] = useState(relative.notes)\n    const [birthplace, setBirthplace] = useState(relative.birthplace)\n\n    \nconst dispatch = useDispatch()\n\nfunction handleOnSubmit(e) {\n    e.preventDefault()\n    const payload = {\n         firstName,\n    middleName,\n    lastName,\n    fullName: `${firstName} ${lastName}`,\n    nickname,\n    altName,\n     notes,\n    relationship: relative.relationship,\n     relativeId: relative.relativeId,\n     userId: relative.userId,\n    birthdate,\n    birthplace,\n    email,\n    phone,\n    address\n    }\n\n\n    for (const key in payload) {\n        \n            const element = payload[key];\n            if (!element) {payload[key] = ''}\n    }\n    dispatch(updateRelative(payload, history))\n    props.setEditing(false)\n    history.push(`/relatives/${relative.relativeId}`);\n    \n    \n}\n\n\nfunction handleOnClick() {\n    history.goBack()\n    props.setEditing(false)\n}\n    return (\n        <div>\n            <h2>{relative.fullName} ({relative.relationship})</h2>\n        <Form onSubmit={e => handleOnSubmit(e)} id='edit-form' >\n               \n                <Form.Group as={Row}  controlId='formFirstName'>\n                    \n                    <Form.Label column sm={2}>\n                        First Name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"firstName\" \n                        value={firstName}\n                        onChange={(event) => setFirstName(event.target.value)} />\n                    </Col>\n                   \n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formMiddleName'>\n                    <Form.Label column sm={2}>\n                        Middle Name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"middleName\" \n                        value={middleName}\n                        onChange={(event) => setMiddleName(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formLastName'>\n                    <Form.Label column sm={2}>\n                        Last Name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"lastName\" \n                        value={lastName}\n                        onChange={(event) => setLastName(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formNickname'>\n                    <Form.Label column sm={2}>\n                        Nick name:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"nickname\" \n                        value={nickname}\n                        onChange={(event) => setNickname(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formAltName'>\n                    <Form.Label column sm={2}>\n                        Alternative Names/Spelling:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"altName\" \n                        value={altName}\n                        onChange={(event) => setAltName(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formEmail'>\n                    <Form.Label column sm={2}>\n                        Email:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='email' \n                        name=\"email\" \n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formPhone'>\n                    <Form.Label column sm={2}>\n                        Phone:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='tel' \n                        name=\"phone\" \n                        value={phone}\n                        onChange={(event) => setPhone(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formBirthdate'>\n                    <Form.Label column sm={2}>\n                        Birthdate:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='date' \n                        name=\"birthdate\" \n                        value={birthdate}\n                        onChange={(event) => setBirthdate(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId='formBirthplace'>\n                    <Form.Label column sm={2}>\n                        Birthplace:\n                    </Form.Label>\n                    <Col xs='auto'>\n                        <Form.Control \n                        type='text' \n                        name=\"birthplace\" \n                        value={birthplace}\n                        onChange={(event) => setBirthplace(event.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formAddress\">\n    <Form.Label column sm={2}>Address:</Form.Label>\n    <Col xs='auto'>\n    <Form.Control \n    placeholder=\"Street\"\n    type='text' \n    name=\"address\" \n    value={address}\n    onChange={(event) => setAddress(event.target.value)}  />\n    </Col>\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formCity\">\n    \n      <Form.Control \n      placeholder=\"City\"\n      type='text' \n      name=\"city\" \n      value={city}\n      onChange={(event) => setCity(event.target.value)}/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formState\">\n     \n      <Form.Control placeholder=\"State\"\n      type='text'\n      name=\"state\" \n      value={state}\n      onChange={(event) => setState(event.target.value)}/>\n    </Form.Group>\n\n    <Form.Group as={Col} controlId=\"formZip\">\n      \n      <Form.Control \n      placeholder=\"Zip\"\n      type='text' \n      name=\"zip\" \n      value={zip}\n      onChange={(event) => setZip(event.target.value)}/>\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group as={Row} controlId='formNotes'>\n                    <Form.Label column sm={2}>\n                        Notes:\n                    </Form.Label>\n                    <Col >\n                        <Form.Control \n                        as='textarea' \n                        name=\"notes\" \n                        value={notes}\n                        onChange={(event) => setNotes(event.target.value)} />\n                    </Col>\n                </Form.Group>\n                \n                <Button \n                type='submit'\nclassName=\"update-button\" \nvariant='primary' \nsize='lg' \nblock\n>\n\n    {/* {loading && <span><Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />Saving...</span>} */}\n   Save Changes\n    \n    </Button>\n<Button block variant='warning' size='lg' onClick={handleOnClick}>Cancel</Button>\n            </Form>\n\n\n</div>\n    )\n\n\n}\n\nexport default RelativeEdit","export function updateRelative(relativeObj) {\n  const relative = relativeObj;\n\n  return (dispatch) => {\n    dispatch({ type: \"UPDATING_RELATIVE\" });\n    fetch(\"https://family-tree-maker-v3.herokuapp.com/relatives\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(relative),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.success === true) {\n          dispatch({ type: \"REMOVE_RELATIVE\", payload: relative });\n          dispatch({ type: \"ADD_RELATIVE\", payload: relative });\n        } else {\n          console.log(result.error);\n        }\n      });\n  };\n}\n","import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport RelativeDetails from '../components/RelativeDetails'\nimport RelativeEdit from '../components/RelativeEdit'\nimport {deleteRelative} from '../actions/deleteRelative'\nimport DeleteConfirmModal from '../components/DeleteConfirmModal';\n\n\nconst RelativeShowContainer = (props) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [editing, setEditing] = useState(props.editing)\n    const [modalShow, setModalShow] = useState(false)\n    const relatives = useSelector(state => state.relatives.relatives)\n    const {relativeId} = useParams();\n    const relative = relatives.find(relative => relative.relativeId === relativeId)\n\n    if (!relative) return <div>Relative Not Found</div>\n\n\n    const handleClickDelete = () => {\n\n        const payload = {relativeId: relativeId,\n                           userId: relative.userId}\n         dispatch(deleteRelative(payload))\n         setModalShow(false)\n         history.push('/relatives')\n   }\n   \n   const handleClickCancel = () => {\n         setModalShow(false)\n   }\n    \n\n    return (\n        \n            <Container>\n                <h1>Relative Details</h1>\n                <Jumbotron>\n                \n\n                {(editing) ? <RelativeEdit relative={relative} setEditing={setEditing}/> : <RelativeDetails relative={relative} setEditing={setEditing}/>}\n\n            <br/>\n            <br/>\n           \n            <Button onClick={() => setModalShow(true)} className=\"delete-button\" variant='danger' size='lg' block>Delete Relative</Button>\n            <DeleteConfirmModal \n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            handleclickdelete={handleClickDelete}\n            handleclickcancel={handleClickCancel}\n            />\n            </Jumbotron>\n        </Container>\n    )\n\n}\n\nexport default RelativeShowContainer","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport NavBar from './components/NavBar';\r\nimport Dashboard from './containers/dashboard/Dashboard'\r\nimport ProfilePage from './containers/profile-page/ProfilePage'\r\nimport FamilyPage from './containers/family-page/FamilyPage'\r\nimport TreePage from './containers/tree-page/TreePage'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport RelativeShowContainer from './containers/RelativeShowContainer'\r\n\r\nconst App = () => {\r\n\r\n  const needUserInfo = useSelector(state => state.users.needUserInfo)\r\n\r\n  const {logout} = useAuth0();\r\n \r\nconsole.log(needUserInfo)\r\n  return (\r\n   \r\n       <Router >\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n             \r\n              <Redirect to='/home'/>\r\n            </Route>\r\n\r\n\r\n            <Route path='/home'>\r\n              <Dashboard />\r\n              \r\n            </Route>\r\n\r\n            <Route path='/profile/edit'>\r\n              <ProfilePage editing={true}/>\r\n            </Route>\r\n\r\n            <Route path='/profile'>\r\n              <ProfilePage editing={false}/>\r\n            </Route>\r\n\r\n            \r\n\r\n            <Route path='/relatives/:relativeId/edit'>\r\n              <RelativeShowContainer editing={true}/>\r\n            </Route>\r\n\r\n            <Route path='/relatives/:relativeId'>\r\n              <RelativeShowContainer editing={false}/>\r\n            </Route>\r\n\r\n        \r\n\r\n            <Route path='/relatives'>\r\n              <FamilyPage />\r\n            </Route>\r\n\r\n            <Route path='/tree'>\r\n              <TreePage />\r\n            </Route>\r\n\r\n            <Route path='/logout' render={() => <button onClick={logout()}>Log Out</button>} />\r\n          </Switch>\r\n       </Router> \r\n      \r\n  );}\r\n \r\n\r\nexport default App;\r\n\r\n","import { fetchRelatives } from \"./fetchRelatives\";\n\nexport function fetchUser(user) {\n  return (dispatch) => {\n    dispatch({ type: \"FETCHING_USER\" });\n\n    fetch(\"https://family-tree-maker-v3.herokuapp.com/users\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        userId: `${user.sub}`,\n        email: `${user.email}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        dispatch({ type: \"SETTING_USER_INFO\" });\n        const payload = result.userInfo;\n        dispatch({ type: \"SET_USER_INFO\", payload });\n        dispatch(fetchRelatives(user.sub));\n      });\n  };\n}\n","export function fetchRelatives(userId) {\n  return (dispatch) => {\n    dispatch({ type: \"FETCHING_RELATIVES\" });\n    fetch(\"https://family-tree-maker-v3.herokuapp.com/relatives\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        userId: `${userId}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.relatives.length > 0) {\n          result.relatives.forEach((relative) =>\n            dispatch({ type: \"ADD_RELATIVE\", payload: relative })\n          );\n        } else if (result.relatives.length === 0) {\n          console.log(\"No saved relatives found for this user\");\n        } else {\n          console.log(result.error);\n        }\n      });\n  };\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport App from '../App'\nimport { useAuth0 } from '@auth0/auth0-react';\n\nimport { fetchUser } from '../actions/fetchUser';\n\n\nconst AuthContainer = () => {\n  const dispatch = useDispatch();\n    const {\n        isLoading,\n        isAuthenticated,\n        error,\n        user,\n        loginWithRedirect\n      } = useAuth0();\n\n\n if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    return <div>Oops... {error.message}</div>;\n  }\n  if (isAuthenticated) {\n\nconsole.log(user)\nconsole.log(user.given_name)\n\ndispatch(fetchUser(user))\n\n\n  \nreturn (\n<App />\n)\n  }\n  else {\n    loginWithRedirect()\n  }\n\n}\n\nexport default AuthContainer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport rootReducer from './reducers/rootReducer'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport thunk from 'redux-thunk';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport AuthContainer from './containers/AuthContainer'\n\n\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,\n  composeEnhancer(applyMiddleware(thunk))\n  );\n\nReactDOM.render(\n  <Auth0Provider\n  domain=\"near-net.us.auth0.com\"\n    clientId=\"zCPYFkh1GuJm5Zmz1aRQvHUy5dMVrZVp\"\n    redirectUri={window.location.origin}\n    audience=\"https://near-net.us.auth0.com/api/v2/\"\n    scope=\"read:current_user update:current_user_metadata\"\n    >\n  <Provider store={store}>\n    <AuthContainer />\n  </Provider>\n  </Auth0Provider>\n ,\n  document.getElementById('root')\n);"],"sourceRoot":""}